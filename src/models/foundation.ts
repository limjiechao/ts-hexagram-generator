type Yin = '1'
type Yang = '2'
type Line = Yin | Yang
type Trigram = `${Line}${Line}${Line}`
export type Hexagram = `${Trigram}${Trigram}`

// eslint-disable-next-line unused-imports/no-unused-vars
const LOWER_TRIGRAM_KEYS = {
  1: 'T111',
  2: 'T222',
  3: 'T122',
  4: 'T212',
  5: 'T111',
  6: 'T212',
  7: 'T212',
  8: 'T222',
  9: 'T111',
  10: 'T112',
  11: 'T111',
  12: 'T222',
  13: 'T121',
  14: 'T111',
  15: 'T221',
  16: 'T222',
  17: 'T122',
  18: 'T211',
  19: 'T112',
  20: 'T222',
  21: 'T122',
  22: 'T121',
  23: 'T222',
  24: 'T122',
  25: 'T122',
  26: 'T111',
  27: 'T122',
  28: 'T211',
  29: 'T212',
  30: 'T121',
  31: 'T221',
  32: 'T211',
  33: 'T221',
  34: 'T111',
  35: 'T222',
  36: 'T121',
  37: 'T121',
  38: 'T112',
  39: 'T221',
  40: 'T212',
  41: 'T112',
  42: 'T122',
  43: 'T111',
  44: 'T211',
  45: 'T222',
  46: 'T211',
  47: 'T212',
  48: 'T211',
  49: 'T121',
  50: 'T211',
  51: 'T122',
  52: 'T221',
  53: 'T221',
  54: 'T112',
  55: 'T121',
  56: 'T221',
  57: 'T211',
  58: 'T112',
  59: 'T212',
  60: 'T112',
  61: 'T112',
  62: 'T221',
  63: 'T121',
  64: 'T212',
} as const

export type LowerTrigramKey<Order extends WenWangOrder = WenWangOrder> =
  (typeof LOWER_TRIGRAM_KEYS)[Order]

// eslint-disable-next-line unused-imports/no-unused-vars
const UPPER_TRIGRAM_KEYS = {
  1: 'T111',
  2: 'T222',
  3: 'T212',
  4: 'T221',
  5: 'T212',
  6: 'T111',
  7: 'T222',
  8: 'T212',
  9: 'T211',
  10: 'T111',
  11: 'T222',
  12: 'T111',
  13: 'T111',
  14: 'T121',
  15: 'T222',
  16: 'T122',
  17: 'T112',
  18: 'T221',
  19: 'T222',
  20: 'T211',
  21: 'T121',
  22: 'T221',
  23: 'T221',
  24: 'T222',
  25: 'T111',
  26: 'T221',
  27: 'T221',
  28: 'T112',
  29: 'T212',
  30: 'T121',
  31: 'T112',
  32: 'T122',
  33: 'T111',
  34: 'T122',
  35: 'T121',
  36: 'T222',
  37: 'T211',
  38: 'T121',
  39: 'T212',
  40: 'T122',
  41: 'T221',
  42: 'T211',
  43: 'T112',
  44: 'T111',
  45: 'T112',
  46: 'T222',
  47: 'T112',
  48: 'T212',
  49: 'T112',
  50: 'T121',
  51: 'T122',
  52: 'T221',
  53: 'T211',
  54: 'T122',
  55: 'T122',
  56: 'T121',
  57: 'T211',
  58: 'T112',
  59: 'T211',
  60: 'T212',
  61: 'T211',
  62: 'T122',
  63: 'T212',
  64: 'T121',
} as const

export type UpperTrigramKey<Order extends WenWangOrder = WenWangOrder> =
  (typeof UPPER_TRIGRAM_KEYS)[Order]

// eslint-disable-next-line unused-imports/no-unused-vars
const HEXAGRAM_KEYS = {
  1: 'H111111',
  2: 'H222222',
  3: 'H122212',
  4: 'H212221',
  5: 'H111212',
  6: 'H212111',
  7: 'H212222',
  8: 'H222212',
  9: 'H111211',
  10: 'H112111',
  11: 'H111222',
  12: 'H222111',
  13: 'H121111',
  14: 'H111121',
  15: 'H221222',
  16: 'H222122',
  17: 'H122112',
  18: 'H211221',
  19: 'H112222',
  20: 'H222211',
  21: 'H122121',
  22: 'H121221',
  23: 'H222221',
  24: 'H122222',
  25: 'H122111',
  26: 'H111221',
  27: 'H122221',
  28: 'H211112',
  29: 'H212212',
  30: 'H121121',
  31: 'H221112',
  32: 'H211122',
  33: 'H221111',
  34: 'H111122',
  35: 'H222121',
  36: 'H121222',
  37: 'H121211',
  38: 'H112121',
  39: 'H221212',
  40: 'H212122',
  41: 'H112221',
  42: 'H122211',
  43: 'H111112',
  44: 'H211111',
  45: 'H222112',
  46: 'H211222',
  47: 'H212112',
  48: 'H211212',
  49: 'H121112',
  50: 'H211121',
  51: 'H122122',
  52: 'H221221',
  53: 'H221211',
  54: 'H112122',
  55: 'H121122',
  56: 'H221121',
  57: 'H211211',
  58: 'H112112',
  59: 'H212211',
  60: 'H112212',
  61: 'H112211',
  62: 'H221122',
  63: 'H121212',
  64: 'H212121',
} as const

export type HexagramKey<Order extends WenWangOrder = WenWangOrder> =
  (typeof HEXAGRAM_KEYS)[Order]

// ============================================================================
// Binary
// ============================================================================

export const HEXAGRAM_BINARIES = {
  1: '0b111111',
  2: '0b000000',
  3: '0b100010',
  4: '0b010001',
  5: '0b111010',
  6: '0b010111',
  7: '0b010000',
  8: '0b000010',
  9: '0b111011',
  10: '0b110111',
  11: '0b111000',
  12: '0b000111',
  13: '0b101111',
  14: '0b111101',
  15: '0b001000',
  16: '0b000100',
  17: '0b100110',
  18: '0b011001',
  19: '0b110000',
  20: '0b000011',
  21: '0b100101',
  22: '0b101001',
  23: '0b000001',
  24: '0b100000',
  25: '0b100111',
  26: '0b111001',
  27: '0b100001',
  28: '0b011110',
  29: '0b010010',
  30: '0b101101',
  31: '0b001110',
  32: '0b011100',
  33: '0b001111',
  34: '0b111100',
  35: '0b000101',
  36: '0b101000',
  37: '0b101011',
  38: '0b110101',
  39: '0b001010',
  40: '0b010100',
  41: '0b110001',
  42: '0b100011',
  43: '0b111110',
  44: '0b011111',
  45: '0b000110',
  46: '0b011000',
  47: '0b010110',
  48: '0b011010',
  49: '0b101110',
  50: '0b011101',
  51: '0b100100',
  52: '0b001001',
  53: '0b001011',
  54: '0b110100',
  55: '0b101100',
  56: '0b001101',
  57: '0b011011',
  58: '0b110110',
  59: '0b010011',
  60: '0b110010',
  61: '0b110011',
  62: '0b001100',
  63: '0b101010',
  64: '0b010101',
} as const

export type HexagramBinary<Order extends WenWangOrder = WenWangOrder> =
  (typeof HEXAGRAM_BINARIES)[Order]

// ============================================================================
// Order
// ============================================================================

export const WEN_WANG_ORDER = [
  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
  23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
  42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
  61, 62, 63, 64,
] as const

export type WenWangOrder = (typeof WEN_WANG_ORDER)[number]

export const FUXI_ORDER = {
  1: 64,
  2: 1,
  3: 35,
  4: 18,
  5: 59,
  6: 24,
  7: 17,
  8: 3,
  9: 60,
  10: 56,
  11: 57,
  12: 8,
  13: 48,
  14: 62,
  15: 9,
  16: 5,
  17: 39,
  18: 26,
  19: 49,
  20: 4,
  21: 38,
  22: 42,
  23: 2,
  24: 33,
  25: 40,
  26: 58,
  27: 34,
  28: 31,
  29: 19,
  30: 46,
  31: 15,
  32: 29,
  33: 16,
  34: 61,
  35: 6,
  36: 41,
  37: 44,
  38: 54,
  39: 11,
  40: 21,
  41: 50,
  42: 36,
  43: 63,
  44: 32,
  45: 7,
  46: 25,
  47: 23,
  48: 27,
  49: 47,
  50: 30,
  51: 37,
  52: 10,
  53: 12,
  54: 53,
  55: 45,
  56: 14,
  57: 28,
  58: 55,
  59: 20,
  60: 51,
  61: 52,
  62: 13,
  63: 43,
  64: 22,
} as const

export type FuxiOrder<Order extends WenWangOrder = WenWangOrder> =
  (typeof FUXI_ORDER)[Order]

// ============================================================================
// Name
// ============================================================================

export const HEXAGRAM_NAME_CHINESE_TRADITIONAL = {
  1: '乾',
  2: '坤',
  3: '屯',
  4: '蒙',
  5: '需',
  6: '訟',
  7: '師',
  8: '比',
  9: '小畜',
  10: '履',
  11: '泰',
  12: '否',
  13: '同人',
  14: '大有',
  15: '謙',
  16: '豫',
  17: '隨',
  18: '蠱',
  19: '臨',
  20: '觀',
  21: '噬嗑',
  22: '賁',
  23: '剝',
  24: '復',
  25: '無妄',
  26: '大畜',
  27: '頤',
  28: '大過',
  29: '坎',
  30: '離',
  31: '咸',
  32: '恆',
  33: '遯',
  34: '大壯',
  35: '晉',
  36: '明夷',
  37: '家人',
  38: '睽',
  39: '蹇',
  40: '解',
  41: '損',
  42: '益',
  43: '夬',
  44: '姤',
  45: '萃',
  46: '升',
  47: '困',
  48: '井',
  49: '革',
  50: '鼎',
  51: '震',
  52: '艮',
  53: '漸',
  54: '歸妹',
  55: '豐',
  56: '旅',
  57: '巽',
  58: '兌',
  59: '渙',
  60: '節',
  61: '中孚',
  62: '小過',
  63: '既濟',
  64: '未濟',
} as const

export type HexagramNameChineseTraditional<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_NAME_CHINESE_TRADITIONAL)[Order]

export const HEXAGRAM_NAME_CHINESE_SIMPLIFIED = {
  1: '乾',
  2: '坤',
  3: '屯',
  4: '蒙',
  5: '需',
  6: '讼',
  7: '师',
  8: '比',
  9: '小畜',
  10: '履',
  11: '泰',
  12: '否',
  13: '同人',
  14: '大有',
  15: '谦',
  16: '豫',
  17: '随',
  18: '蛊',
  19: '临',
  20: '观',
  21: '噬嗑',
  22: '贲',
  23: '剥',
  24: '复',
  25: '无妄',
  26: '大畜',
  27: '颐',
  28: '大过',
  29: '坎',
  30: '离',
  31: '咸',
  32: '恒',
  33: '遁',
  34: '大壮',
  35: '晋',
  36: '明夷',
  37: '家人',
  38: '睽',
  39: '蹇',
  40: '解',
  41: '损',
  42: '益',
  43: '夬',
  44: '姤',
  45: '萃',
  46: '升',
  47: '困',
  48: '井',
  49: '革',
  50: '鼎',
  51: '震',
  52: '艮',
  53: '渐',
  54: '归妹',
  55: '丰',
  56: '旅',
  57: '巽',
  58: '兑',
  59: '涣',
  60: '节',
  61: '中孚',
  62: '小过',
  63: '既济',
  64: '未济',
} as const

export type HexagramNameChineseSimplified<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_NAME_CHINESE_SIMPLIFIED)[Order]

export const HEXAGRAM_NAME_ENGLISH_WILHELM_BAYNES = {
  1: 'Ch’ien / The Creative',
  2: 'K’un / The Receptive',
  3: 'Chun / Difficulty at the Beginning',
  4: 'Mêng / Youthful Folly',
  5: 'Hsü / Waiting (Nourishment)',
  6: 'Sung / Conflict',
  7: 'Shih / The Army',
  8: 'Pi / Holding Together [Union]',
  9: 'Hsiao Ch’u / The Taming Power of the Small',
  10: 'Lü / Treading [Conduct]',
  11: 'T’ai / Peace',
  12: 'P’i / Standstill [Stagnation]',
  13: 'T’ung Jên / Fellowship with Men',
  14: 'Ta Yu / Posession in Great Measure',
  15: 'Ch’ien / Modesty',
  16: 'Yü / Enthusiasm',
  17: 'Sui / Following',
  18: 'Ku / Work on What Has Been Spoiled [Decay]',
  19: 'Lin / Approach',
  20: 'Kuan / Contemplation (View)',
  21: 'Shih Ho / Biting Through',
  22: 'Pi / Grace',
  23: 'Po / Splitting Apart',
  24: 'Fu / Return (The Turning Point)',
  25: 'Wu Wang / Innocence (The Unexpected)',
  26: 'Ta Ch’u / The Taming Power of the Great',
  27: 'I / The Corners of the Mouth',
  28: 'Ta Kuo / Preponderance of the Great',
  29: 'K’an / The Abysmal (Water)',
  30: 'Li / The Clinging, Fire',
  31: 'Hsien / Influence (Wooing)',
  32: 'Hêng / Duration',
  33: 'Tun / Retreat',
  34: 'Ta Chuang / The Power of the Great',
  35: 'Chin / Progress',
  36: 'Ming I / Darkening of the Light',
  37: 'Chia Jên / The Family [The Clan]',
  38: 'K’uei / Opposition',
  39: 'Chien / Obstruction',
  40: 'Hsieh / Deliverance',
  41: 'Sun / Decrease',
  42: 'I / Increase',
  43: 'Kuai / Break-through (Resoluteness)',
  44: 'Kou / Coming to Meet',
  45: 'Ts’ui / Gathering Together [Massing]',
  46: 'Shêng / Pushing Upward',
  47: 'K’un / Oppression (Exhaustion)',
  48: 'Ching / The Well',
  49: 'Ko / Revolution (Molting)',
  50: 'Ting / The Caldron',
  51: 'Chên / The Arousing (Shock, Thunder)',
  52: 'Kên / Keeping Still, Mountain',
  53: 'Chien / Development (Gradual Progress)',
  54: 'Kuei Mei / The Marrying Maiden',
  55: 'Fêng / Abundance [Fullness]',
  56: 'Lü / The Wanderer',
  57: 'Sun / The Gentle (Penetrating, Wind)',
  58: 'Tui / The Joyous, Lake',
  59: 'Huan / Dispersion [Dissolution]',
  60: 'Chieh / Limitation',
  61: 'Chung Fu / Inner Truth',
  62: 'Hsiao Kuo / Preponderance of the Small',
  63: 'Chi Chi / After Completion',
  64: 'Wei Chi / Before Completion',
} as const

export type HexagramNameEnglishWilhelmBaynes<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_NAME_ENGLISH_WILHELM_BAYNES)[Order]

export const HEXAGRAM_NAME_ENGLISH_LEGGE = {
  1: 'I. The Khien Hexagram',
  2: 'II. The Khwăn Hexagram',
  3: 'III. The Kun Hexagram',
  4: 'IV. The Măng Hexagram',
  5: 'V. The Hsü Hexagram',
  6: 'VI. The Sung Hexagram',
  7: 'VII. The Sze Hexagram',
  8: 'VIII. The Pî Hexagram',
  9: 'IX. The Hsiâo Khû Hexagram',
  10: 'X. The Lî Hexagram',
  11: 'XI. The Thâi Hexagram',
  12: 'XII. The Phî Hexagram',
  13: 'XIII. The Thung Zăn',
  14: 'XIV. The Tâ Yû Hexagram',
  15: 'XV. The Khien Hexagram',
  16: 'XVI. The Yü Hexagram',
  17: 'XVII. The Sui Hexagram',
  18: 'XVIII. The Kû Hexagram',
  19: 'XIX. The Lin Hexagram',
  20: 'XX. The Kwân Hexagram',
  21: 'XXI. The Shih Ho Hexagram',
  22: 'XXII. The Pî Hexagram',
  23: 'XXIII. The Po Hexagram',
  24: 'XXIV. The Fû Hexagram',
  25: 'XXV. The Wû Wang Hexagram',
  26: 'XXVI. The Tâ Khû Hexagram',
  27: 'XXVII. The Î Hexagram',
  28: 'XXVIII. The Tâ Kwo Hexagram',
  29: 'XXIX. The Khan Hexagram',
  30: 'XXX. The Lî Hexagram',
  31: 'XXXI. The Hsien Hexagram',
  32: 'XXXII. The Hăng Hexagram',
  33: 'XXXIII. The Thun Hexagram',
  34: 'XXXIV. The Tâ Kwang Hexagram',
  35: 'XXXV. The Žin Hexagram',
  36: 'XXXVI. The Ming Î Hexagram',
  37: 'XXXVII. The Kiâ Zăn Hexagram',
  38: 'XXXVIII. The Khwei Hexagram',
  39: 'XXXIX. The Kien Hexagram',
  40: 'XL. The Kieh Hexagram',
  41: 'XLI. The Sun Hexagram',
  42: 'XLII. The Yî Hexagram',
  43: 'XLIII. The Kwâi Hexagram',
  44: 'XLIV. The Kâu Hexagram',
  45: 'XLV. The Žhui Hexagram',
  46: 'XLVI. The Shăng Hexagram',
  47: 'XLVII. The Khwăn Hexagram',
  48: 'XLVIII. The Žing Hexagram',
  49: 'XLIX. The Ko Hexagram',
  50: 'L. The Ting Hexagram',
  51: 'LI. The Kăn Hexagram',
  52: 'LII. The Kăn Hexagram',
  53: 'LIII. The Kien Hexagram',
  54: 'LIV. The Kwei Mei Hexagram',
  55: 'LV. The Făng Hexagram',
  56: 'LVI. The Lü Hexagram',
  57: 'LVII. The Sun Hexagram',
  58: 'LVIII. The Tui Hexagram',
  59: 'LIX. The Hwân Hexagram',
  60: 'LX. The Kieh Hexagram',
  61: 'LXI. The Kung Fû Hexagram',
  62: 'LXII. The Hsiâo Kwo Hexagram',
  63: 'LXIII. The Kî Žî Hexagram',
  64: 'LXIV. The Wei Žî Hexagram',
} as const

export type HexagramNameEnglishLegge<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_NAME_ENGLISH_LEGGE)[Order]

// ============================================================================
// Pronunciation
// ============================================================================

export const HEXAGRAM_PRONUNCIATION_PINYIN = {
  1: 'qián',
  2: 'kūn',
  3: 'zhūn',
  4: 'méng',
  5: 'xū',
  6: 'sòng',
  7: 'shī',
  8: 'bǐ',
  9: 'xiǎo xù',
  10: 'lǚ',
  11: 'tài',
  12: 'pǐ',
  13: 'tóng rén',
  14: 'dà yǒu',
  15: 'qiān',
  16: 'yù',
  17: 'suí',
  18: 'gŭ',
  19: 'lín',
  20: 'guān',
  21: 'shì hé',
  22: 'bì',
  23: 'bō',
  24: 'fù',
  25: 'wú wàng',
  26: 'dà xù',
  27: 'yí',
  28: 'dà guò',
  29: 'kǎn',
  30: 'lí',
  31: 'xián',
  32: 'héng',
  33: 'dùn',
  34: 'dà zhuàng',
  35: 'jìn',
  36: 'míng yí',
  37: 'jiā rén',
  38: 'kuí',
  39: 'jiǎn',
  40: 'xiè',
  41: 'sǔn',
  42: 'yì',
  43: 'guài',
  44: 'gòu',
  45: 'cuì',
  46: 'shēng',
  47: 'kùn',
  48: 'jǐng',
  49: 'gé',
  50: 'dǐng',
  51: 'zhèn',
  52: 'gèn',
  53: 'jiàn',
  54: 'guī mèi',
  55: 'fēng',
  56: 'lǚ',
  57: 'xùn',
  58: 'duì',
  59: 'huàn',
  60: 'jié',
  61: 'zhōng fú',
  62: 'xiǎo guò',
  63: 'jì jì',
  64: 'wèi jì',
} as const

export type HexagramPronunciationPinyin<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_PRONUNCIATION_PINYIN)[Order]

export const HEXAGRAM_PRONUNCIATION_ZHUYIN = {
  1: 'ㄑㄧㄢˊ',
  2: 'ㄎㄨㄣ',
  3: 'ㄓㄨㄣ',
  4: 'ㄇㄥˊ',
  5: 'ㄒㄩˉ',
  6: 'ㄙㄨㄥˋ',
  7: 'ㄕㄧˉ',
  8: 'ㄅㄧˇ',
  9: 'ㄒㄧㄠˇ ㄒㄩˋ',
  10: 'ㄌㄩˇ',
  11: 'ㄊㄞˋ',
  12: 'ㄆㄧˇ',
  13: 'ㄊㄨㄥˊ ㄖㄣˊ',
  14: 'ㄉㄚˋ ㄧㄡˇ',
  15: 'ㄑㄧㄢˉ',
  16: 'ㄩˋ',
  17: 'ㄙㄨㄟˊ',
  18: 'ㄍㄨˇ',
  19: 'ㄌㄧㄣˊ',
  20: 'ㄍㄨㄢˉ',
  21: 'ㄕˋ ㄏㄜˊ',
  22: 'ㄅㄧˋ',
  23: 'ㄅㄛ',
  24: 'ㄈㄨˋ',
  25: 'ㄨˊ ㄨㄤˋ',
  26: 'ㄉㄚˋ ㄒㄩˋ',
  27: 'ㄧˊ',
  28: 'ㄉㄚˋ ㄍㄨㄛˋ',
  29: 'ㄎㄢˇ',
  30: 'ㄌㄧˊ',
  31: 'ㄒㄧㄢˊ',
  32: 'ㄏㄥˊ',
  33: 'ㄉㄨㄣˋ',
  34: 'ㄉㄚˋ ㄓㄨㄤˋ',
  35: 'ㄐㄧㄣˋ',
  36: 'ㄇㄧㄥˊ ㄧˊ',
  37: 'ㄐㄧㄚ ㄖㄣˊ',
  38: 'ㄎㄨㄟˊ',
  39: 'ㄐㄧㄢˇ',
  40: 'ㄒㄧㄝˋ',
  41: 'ㄙㄨㄣˇ',
  42: 'ㄧˋ',
  43: 'ㄍㄨㄞˋ',
  44: 'ㄍㄡˋ',
  45: 'ㄘㄨㄟˋ',
  46: 'ㄕㄥˉ',
  47: 'ㄎㄨㄣˋ',
  48: 'ㄐㄧㄥˇ',
  49: 'ㄍㄜˊ',
  50: 'ㄉㄧㄥˇ',
  51: 'ㄓㄣˋ',
  52: 'ㄍㄣˋ',
  53: 'ㄐㄧㄢˋ',
  54: 'ㄍㄨㄟ ㄇㄟˋ',
  55: 'ㄈㄥˉ',
  56: 'ㄌㄩˇ',
  57: 'ㄒㄩㄣˋ',
  58: 'ㄉㄨㄟˋ',
  59: 'ㄏㄨㄢˋ',
  60: 'ㄐㄧㄝˊ',
  61: 'ㄓㄨㄥ ㄈㄨˊ',
  62: 'ㄒㄧㄠˇ ㄍㄨㄛˋ',
  63: 'ㄐㄧˋ ㄐㄧˋ',
  64: 'ㄨㄟˋ ㄐㄧˋ',
} as const

export type HexagramPronunciationZhuyin<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_PRONUNCIATION_ZHUYIN)[Order]

// ============================================================================
// Unicode
// ============================================================================

export const HEXAGRAM_UNICODE_CHARACTER = {
  1: '䷀',
  2: '䷁',
  3: '䷂',
  4: '䷃',
  5: '䷄',
  6: '䷅',
  7: '䷆',
  8: '䷇',
  9: '䷈',
  10: '䷉',
  11: '䷊',
  12: '䷋',
  13: '䷌',
  14: '䷍',
  15: '䷎',
  16: '䷏',
  17: '䷐',
  18: '䷑',
  19: '䷒',
  20: '䷓',
  21: '䷔',
  22: '䷕',
  23: '䷖',
  24: '䷗',
  25: '䷘',
  26: '䷙',
  27: '䷚',
  28: '䷛',
  29: '䷜',
  30: '䷝',
  31: '䷞',
  32: '䷟',
  33: '䷠',
  34: '䷡',
  35: '䷢',
  36: '䷣',
  37: '䷤',
  38: '䷥',
  39: '䷦',
  40: '䷧',
  41: '䷨',
  42: '䷩',
  43: '䷪',
  44: '䷫',
  45: '䷬',
  46: '䷭',
  47: '䷮',
  48: '䷯',
  49: '䷰',
  50: '䷱',
  51: '䷲',
  52: '䷳',
  53: '䷴',
  54: '䷵',
  55: '䷶',
  56: '䷷',
  57: '䷸',
  58: '䷹',
  59: '䷺',
  60: '䷻',
  61: '䷼',
  62: '䷽',
  63: '䷾',
  64: '䷿',
} as const

export type HexagramUnicodeCharacter<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_UNICODE_CHARACTER)[Order]

export const HEXAGRAM_UNICODE_NAME_SUFFIX = {
  1: 'The Creative Heaven',
  2: 'The Receptive Earth',
  3: 'Difficulty At The Beginning',
  4: 'Youthful Folly',
  5: 'Waiting',
  6: 'Conflict',
  7: 'The Army',
  8: 'Holding Together',
  9: 'Small Taming',
  10: 'Treading',
  11: 'Peace',
  12: 'Standstill',
  13: 'Fellowship',
  14: 'Great Possession',
  15: 'Modesty',
  16: 'Enthusiasm',
  17: 'Following',
  18: 'Work On The Decayed',
  19: 'Approach',
  20: 'Contemplation',
  21: 'Biting Through',
  22: 'Grace',
  23: 'Splitting Apart',
  24: 'Return',
  25: 'Innocence',
  26: 'Great Taming',
  27: 'Mouth Corners',
  28: 'Great Preponderance',
  29: 'The Abysmal Water',
  30: 'The Clinging Fire',
  31: 'Influence',
  32: 'Duration',
  33: 'Retreat',
  34: 'Great Power',
  35: 'Progress',
  36: 'Darkening Of The Light',
  37: 'The Family',
  38: 'Opposition',
  39: 'Obstruction',
  40: 'Deliverance',
  41: 'Decrease',
  42: 'Increase',
  43: 'Breakthrough',
  44: 'Coming To Meet',
  45: 'Gathering Together',
  46: 'Pushing Upward',
  47: 'Oppression',
  48: 'The Well',
  49: 'Revolution',
  50: 'The Cauldron',
  51: 'The Arousing Thunder',
  52: 'The Keeping Still Mountain',
  53: 'Development',
  54: 'The Marrying Maiden',
  55: 'Abundance',
  56: 'The Wanderer',
  57: 'The Gentle Wind',
  58: 'The Joyous Lake',
  59: 'Dispersion',
  60: 'Limitation',
  61: 'Inner Truth',
  62: 'Small Preponderance',
  63: 'After Completion',
  64: 'Before Completion',
} as const

export type HexagramUnicodeNameSuffix<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_UNICODE_NAME_SUFFIX)[Order]

export const HEXAGRAM_UNICODE_NAME_PREFIX = 'Hexagram For' as const
export type HexagramUnicodeName<Order extends WenWangOrder = WenWangOrder> =
  `${typeof HEXAGRAM_UNICODE_NAME_PREFIX} ${HexagramUnicodeNameSuffix<Order>}`

export const HEXAGRAM_UNICODE_DECIMAL_CODEPOINT = {
  1: 19904,
  2: 19905,
  3: 19906,
  4: 19907,
  5: 19908,
  6: 19909,
  7: 19910,
  8: 19911,
  9: 19912,
  10: 19913,
  11: 19914,
  12: 19915,
  13: 19916,
  14: 19917,
  15: 19918,
  16: 19919,
  17: 19920,
  18: 19921,
  19: 19922,
  20: 19923,
  21: 19924,
  22: 19925,
  23: 19926,
  24: 19927,
  25: 19928,
  26: 19929,
  27: 19930,
  28: 19931,
  29: 19932,
  30: 19933,
  31: 19934,
  32: 19935,
  33: 19936,
  34: 19937,
  35: 19938,
  36: 19939,
  37: 19940,
  38: 19941,
  39: 19942,
  40: 19943,
  41: 19944,
  42: 19945,
  43: 19946,
  44: 19947,
  45: 19948,
  46: 19949,
  47: 19950,
  48: 19951,
  49: 19952,
  50: 19953,
  51: 19954,
  52: 19955,
  53: 19956,
  54: 19957,
  55: 19958,
  56: 19959,
  57: 19960,
  58: 19961,
  59: 19962,
  60: 19963,
  61: 19964,
  62: 19965,
  63: 19966,
  64: 19967,
} as const

export type HexagramUnicodeDecimalCodePoint<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_UNICODE_DECIMAL_CODEPOINT)[Order]

export const HEXAGRAM_UNICODE_DECIMAL_UTF8 = {
  1: [228, 183, 128],
  2: [228, 183, 129],
  3: [228, 183, 130],
  4: [228, 183, 131],
  5: [228, 183, 132],
  6: [228, 183, 133],
  7: [228, 183, 134],
  8: [228, 183, 135],
  9: [228, 183, 136],
  10: [228, 183, 137],
  11: [228, 183, 138],
  12: [228, 183, 139],
  13: [228, 183, 140],
  14: [228, 183, 141],
  15: [228, 183, 142],
  16: [228, 183, 143],
  17: [228, 183, 144],
  18: [228, 183, 145],
  19: [228, 183, 146],
  20: [228, 183, 147],
  21: [228, 183, 148],
  22: [228, 183, 149],
  23: [228, 183, 150],
  24: [228, 183, 151],
  25: [228, 183, 152],
  26: [228, 183, 153],
  27: [228, 183, 154],
  28: [228, 183, 155],
  29: [228, 183, 156],
  30: [228, 183, 157],
  31: [228, 183, 158],
  32: [228, 183, 159],
  33: [228, 183, 160],
  34: [228, 183, 161],
  35: [228, 183, 162],
  36: [228, 183, 163],
  37: [228, 183, 164],
  38: [228, 183, 165],
  39: [228, 183, 166],
  40: [228, 183, 167],
  41: [228, 183, 168],
  42: [228, 183, 169],
  43: [228, 183, 170],
  44: [228, 183, 171],
  45: [228, 183, 172],
  46: [228, 183, 173],
  47: [228, 183, 174],
  48: [228, 183, 175],
  49: [228, 183, 176],
  50: [228, 183, 177],
  51: [228, 183, 178],
  52: [228, 183, 179],
  53: [228, 183, 180],
  54: [228, 183, 181],
  55: [228, 183, 182],
  56: [228, 183, 183],
  57: [228, 183, 184],
  58: [228, 183, 185],
  59: [228, 183, 186],
  60: [228, 183, 187],
  61: [228, 183, 188],
  62: [228, 183, 189],
  63: [228, 183, 190],
  64: [228, 183, 191],
} as const

export type HexagramUnicodeDecimalUtf8<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_UNICODE_DECIMAL_UTF8)[Order]

export const HEXAGRAM_UNICODE_HEX_CODEPOINT = {
  1: 'U+4DC0',
  2: 'U+4DC1',
  3: 'U+4DC2',
  4: 'U+4DC3',
  5: 'U+4DC4',
  6: 'U+4DC5',
  7: 'U+4DC6',
  8: 'U+4DC7',
  9: 'U+4DC8',
  10: 'U+4DC9',
  11: 'U+4DCA',
  12: 'U+4DCB',
  13: 'U+4DCC',
  14: 'U+4DCD',
  15: 'U+4DCE',
  16: 'U+4DCF',
  17: 'U+4DD0',
  18: 'U+4DD1',
  19: 'U+4DD2',
  20: 'U+4DD3',
  21: 'U+4DD4',
  22: 'U+4DD5',
  23: 'U+4DD6',
  24: 'U+4DD7',
  25: 'U+4DD8',
  26: 'U+4DD9',
  27: 'U+4DDA',
  28: 'U+4DDB',
  29: 'U+4DDC',
  30: 'U+4DDD',
  31: 'U+4DDE',
  32: 'U+4DDF',
  33: 'U+4DE0',
  34: 'U+4DE1',
  35: 'U+4DE2',
  36: 'U+4DE3',
  37: 'U+4DE4',
  38: 'U+4DE5',
  39: 'U+4DE6',
  40: 'U+4DE7',
  41: 'U+4DE8',
  42: 'U+4DE9',
  43: 'U+4DEA',
  44: 'U+4DEB',
  45: 'U+4DEC',
  46: 'U+4DED',
  47: 'U+4DEE',
  48: 'U+4DEF',
  49: 'U+4DF0',
  50: 'U+4DF1',
  51: 'U+4DF2',
  52: 'U+4DF3',
  53: 'U+4DF4',
  54: 'U+4DF5',
  55: 'U+4DF6',
  56: 'U+4DF7',
  57: 'U+4DF8',
  58: 'U+4DF9',
  59: 'U+4DFA',
  60: 'U+4DFB',
  61: 'U+4DFC',
  62: 'U+4DFD',
  63: 'U+4DFE',
  64: 'U+4DFF',
} as const

export type HexagramUnicodeHexCodePoint<
  Order extends WenWangOrder = WenWangOrder,
> = (typeof HEXAGRAM_UNICODE_HEX_CODEPOINT)[Order]

export const HEXAGRAM_UNICODE_HEX_UTF8 = {
  1: '0xe4b780',
  2: '0xe4b781',
  3: '0xe4b782',
  4: '0xe4b783',
  5: '0xe4b784',
  6: '0xe4b785',
  7: '0xe4b786',
  8: '0xe4b787',
  9: '0xe4b788',
  10: '0xe4b789',
  11: '0xe4b78a',
  12: '0xe4b78b',
  13: '0xe4b78c',
  14: '0xe4b78d',
  15: '0xe4b78e',
  16: '0xe4b78f',
  17: '0xe4b790',
  18: '0xe4b791',
  19: '0xe4b792',
  20: '0xe4b793',
  21: '0xe4b794',
  22: '0xe4b795',
  23: '0xe4b796',
  24: '0xe4b797',
  25: '0xe4b798',
  26: '0xe4b799',
  27: '0xe4b79a',
  28: '0xe4b79b',
  29: '0xe4b79c',
  30: '0xe4b79d',
  31: '0xe4b79e',
  32: '0xe4b79f',
  33: '0xe4b7a0',
  34: '0xe4b7a1',
  35: '0xe4b7a2',
  36: '0xe4b7a3',
  37: '0xe4b7a4',
  38: '0xe4b7a5',
  39: '0xe4b7a6',
  40: '0xe4b7a7',
  41: '0xe4b7a8',
  42: '0xe4b7a9',
  43: '0xe4b7aa',
  44: '0xe4b7ab',
  45: '0xe4b7ac',
  46: '0xe4b7ad',
  47: '0xe4b7ae',
  48: '0xe4b7af',
  49: '0xe4b7b0',
  50: '0xe4b7b1',
  51: '0xe4b7b2',
  52: '0xe4b7b3',
  53: '0xe4b7b4',
  54: '0xe4b7b5',
  55: '0xe4b7b6',
  56: '0xe4b7b7',
  57: '0xe4b7b8',
  58: '0xe4b7b9',
  59: '0xe4b7ba',
  60: '0xe4b7bb',
  61: '0xe4b7bc',
  62: '0xe4b7bd',
  63: '0xe4b7be',
  64: '0xe4b7bf',
} as const

export type HexagramUnicodeHexUtf8<Order extends WenWangOrder = WenWangOrder> =
  (typeof HEXAGRAM_UNICODE_HEX_UTF8)[Order]

export type LineTexts = {
  L1: string
  L2: string
  L3: string
  L4: string
  L5: string
  L6: string
}
